<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column9.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Delete.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ef/Z
</value>
  </data>
</root>